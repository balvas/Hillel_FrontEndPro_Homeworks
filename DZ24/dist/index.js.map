{"version":3,"file":"index.js","mappings":"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","sources":["webpack:///./src/index.js"],"sourcesContent":["import './style.css'\nimport './style.scss'\nfunction StudentsTable({ form, content, userInfo, addButton }) {\n    if (localStorage.getItem(\"users\") === null) {\n        const students = [\n            {\n                id: 1,\n                name: 'John',\n                surname: 'Doe',\n                dateofbirth: '1999-01-01',\n                age: 0,\n                attendanceArray: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true,],\n                estimatesArray: [100, 100, 100],\n                academicPerformance: ''\n            },\n            {\n                id: 2,\n                name: 'George',\n                surname: 'Smith',\n                dateofbirth: '2000-01-01',\n                age: 0,\n                attendanceArray: [true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true,],\n                estimatesArray: [100, 50, 70],\n                academicPerformance: ''\n            },\n            {\n                id: 3,\n                name: 'John',\n                surname: 'Smith',\n                dateofbirth: '1995-01-01',\n                age: 0,\n                attendanceArray: [false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true,],\n                estimatesArray: [100, 50, 70],\n                academicPerformance: ''\n            }\n        ];\n        const studentsWithAge = students.map((student) => {\n            return {\n                ...student,\n                age: calculateAge(student.dateofbirth),\n                academicPerformance: getAcademicPerformance(student.estimatesArray)\n            };\n        });\n        localStorage.setItem('users', JSON.stringify(studentsWithAge));\n    }\n\n    this.init = function () {\n        form.addEventListener('submit', (event) => {\n            event.preventDefault();\n            this.addStudent(\n                form.elements['name'].value,\n                form.elements['surname'].value,\n                form.elements['dateofbirth'].value\n            )\n        })\n        addButton.addEventListener('click', function () {\n            form.reset();\n            form.classList.add('open');\n        })\n        this.loadUsers();\n    }\n    function calculateAge(dateOfBirth) {\n        const dob = new Date(dateOfBirth);\n        const now = new Date();\n        let age = now.getFullYear() - dob.getFullYear();\n        const monthDiff = now.getMonth() - dob.getMonth();\n        if (monthDiff < 0 || (monthDiff === 0 && now.getDate() < dob.getDate())) {\n            age--;\n        }\n        return age;\n    }\n    function getAcademicPerformance(estimatesArray) {\n        return estimatesArray.reduce((a, b) => (a + b)) / estimatesArray.length;\n    }\n    this.addStudent = function (name, surname, dateofbirth) {\n        const age = calculateAge(dateofbirth);\n        const user = {\n            id: Math.floor(Math.random() * 100),\n            name,\n            surname,\n            dateofbirth,\n            age,\n            attendanceArray: new Array(25),\n            estimatesArray: [],\n            academicPerformance: ''\n\n        }\n        this.userTemplate(user);\n        form.reset();\n        form.classList.remove('open');\n        const currentUsers = JSON.parse(localStorage.getItem('users')) || [];\n        currentUsers.push(user);\n        localStorage.setItem('users', JSON.stringify(currentUsers))\n    }\n    this.loadUsers = function () {\n        const users = JSON.parse(localStorage.getItem('users'));\n        if (users) {\n            users.forEach(user => this.userTemplate(user))\n        }\n    }\n    this.userTemplate = function (user) {\n        const newItem = document.createElement('tr');\n        newItem.classList.add('js--item');\n        newItem.dataset.id = user.id;\n        newItem.insertAdjacentHTML('beforeend', (\n            `<td>${user.id}</td>` +\n            `<td>${user.name} ${user.surname}</td>` +\n            `<td>${user.age}</td>` +\n            `<td><button class=\"btn js--estimates\">Add estimates</button></td>` +\n            `<td><button class=\"btn js--present present\">Present</button><button class=\"btn js--absent absent\">Absent</button></td>` +\n            `<td><button class=\"btn js--summary summary\">View summary</button></td>`\n        ))\n        const addEstimatesButton = newItem.querySelector('.js--estimates');\n        const trueButton = newItem.querySelector('.js--present');\n        const falseButton = newItem.querySelector('.js--absent');\n        const summaryButton = newItem.querySelector('.js--summary');\n        addEstimatesButton.addEventListener('click', () => this.addEstimates(user.id));\n        trueButton.addEventListener('click', () => this.present(user.id));\n        falseButton.addEventListener('click', () => this.absent(user.id));\n        summaryButton.addEventListener('click', () => this.summary(user.id,));\n        content.appendChild(newItem);\n    }\n\n    this.addEstimates = function (userId) {\n        const currentUsers = JSON.parse(localStorage.getItem('users'));\n        const itemToView = currentUsers.find(item => item.id === userId);\n        const input = prompt(\"Enter a list of numbers separated by commas:\");\n        const newEstimatesArray = input.split(\",\").map(num => parseFloat(num.trim()));\n        itemToView.estimatesArray = [...itemToView.estimatesArray, ...newEstimatesArray];\n        itemToView.academicPerformance = itemToView.estimatesArray.reduce((a, b) => (a + b)) / itemToView.estimatesArray.length;\n        localStorage.setItem('users', JSON.stringify(currentUsers));\n    };\n    this.present = function (userId) {\n        const currentUsers = JSON.parse(localStorage.getItem('users'));\n        const itemToView = currentUsers.find(item => item.id === userId);\n        if (itemToView.attendanceArray.includes(null)) {\n            for (let i = 0; i < 25; i++) {\n                if (itemToView.attendanceArray[i] === null) {\n                    itemToView.attendanceArray[i] = true;\n                    localStorage.setItem('users', JSON.stringify(currentUsers));\n                    break;\n                }\n            }\n        }\n        else {\n            alert('All visits counted!');\n        }\n\n    };\n    this.absent = function (userId) {\n        const currentUsers = JSON.parse(localStorage.getItem('users'));\n        const itemToView = currentUsers.find(item => item.id === userId);\n        if (itemToView.attendanceArray.includes(null)) {\n            for (let i = 0; i < 25; i++) {\n                if (itemToView.attendanceArray[i] === null) {\n                    itemToView.attendanceArray[i] = false;\n                    localStorage.setItem('users', JSON.stringify(currentUsers));\n                    break;\n                }\n            }\n        }\n        else {\n            alert('All visits counted!');\n        }\n    };\n    this.summary = function (userId) {\n        const currentUsers = JSON.parse(localStorage.getItem('users'));\n        const itemToView = currentUsers.find(item => item.id === userId);\n        const trueCount = itemToView.attendanceArray.filter(Boolean).length / itemToView.attendanceArray.length;\n        alert(`Your Academic performance is ${itemToView.academicPerformance} \\n And your Visit rate is ${trueCount}`);\n        if (trueCount < 0.9 && itemToView.academicPerformance < 90) {\n            alert('Редиска!');\n        } else if (trueCount < 0.9 || itemToView.academicPerformance < 90) {\n            alert('Добре, але можна краще!');\n        } else {\n            alert('Молодець!');\n        }\n    };\n\n}\n\n\n(new StudentsTable({\n    form: document.querySelector('.js--form'),\n    userInfo: document.querySelector('.js--user'),\n    addButton: document.querySelector('.js--add'),\n    content: document.querySelector('.js--content'),\n})).init();\n"],"names":["form","content","userInfo","addButton","localStorage","getItem","studentsWithAge","id","name","surname","dateofbirth","age","attendanceArray","estimatesArray","academicPerformance","map","student","calculateAge","reduce","a","b","length","setItem","JSON","stringify","dateOfBirth","dob","Date","now","getFullYear","monthDiff","getMonth","getDate","this","init","addEventListener","event","preventDefault","addStudent","elements","value","reset","classList","add","loadUsers","user","Math","floor","random","Array","userTemplate","remove","currentUsers","parse","push","users","forEach","newItem","document","createElement","dataset","insertAdjacentHTML","addEstimatesButton","querySelector","trueButton","falseButton","summaryButton","addEstimates","present","absent","summary","appendChild","userId","itemToView","find","item","newEstimatesArray","prompt","split","num","parseFloat","trim","includes","i","alert","trueCount","filter","Boolean"],"sourceRoot":""}